
services:
  # PostgreSQL Database
  database:
    image: postgres:14-alpine
    container_name: greenschool-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: greenschool
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - greenschool-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Python FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: greenschool-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@database:5432/greenschool
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: green-school-id
      KEYCLOAK_CLIENT_ID: green-school-id
      JWT_SECRET_KEY: your-secret-key-change-in-production
      CORS_ORIGINS: http://localhost:3000,http://localhost:3000/*,http://localhost
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      database:
        condition: service_healthy
    networks:
      - greenschool-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Vue 3)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: greenschool-frontend
    environment:
      VITE_API_URL: http://localhost:8000/api/v1
      VITE_KEYCLOAK_URL: http://localhost:8080
      VITE_KEYCLOAK_REALM: green-school-id
      VITE_KEYCLOAK_CLIENT_ID: green-school-id
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - greenschool-network
    command: npm run dev -- --host 0.0.0.0 --port 3000

networks:
  greenschool-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local

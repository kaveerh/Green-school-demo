version: '3.9'

services:
  # PostgreSQL Database
  database:
    image: postgres:14-alpine
    container_name: greenschool-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: greenschool
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - greenschool-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keycloak Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: greenschool-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://database:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
    command:
      - start-dev
      - --import-realm
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - keycloak_data:/opt/keycloak/data
    depends_on:
      database:
        condition: service_healthy
    networks:
      - greenschool-network
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e 'GET /health/ready HTTP/1.1\\r\\nhost: http://localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3;grep -q '200 OK' <&3"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API (Python FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: greenschool-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@database:5432/greenschool
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: Green-School-id
      KEYCLOAK_CLIENT_ID: Green-School-id
      JWT_SECRET_KEY: your-secret-key-change-in-production
      CORS_ORIGINS: http://localhost:3000,http://localhost
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      database:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - greenschool-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Vue 3)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: greenschool-frontend
    environment:
      VITE_API_URL: http://localhost:8000/api/v1
      VITE_KEYCLOAK_URL: http://localhost:8080
      VITE_KEYCLOAK_REALM: Green-School-id
      VITE_KEYCLOAK_CLIENT_ID: Green-School-id
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - greenschool-network
    command: npm run dev -- --host 0.0.0.0 --port 3000

networks:
  greenschool-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  keycloak_data:
    driver: local
